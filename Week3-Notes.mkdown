function can contain members, other methods
function inherits from object

function == lambda in other languages

when you declare a function, implicitly expands to a variable declaration whose value is that function object

lexical scoping - inner function have access to same variables as parent function

closure - inner function continues to exist as outer function exits.

first lambda language to go mainstream

a function in an object is called a method

too many args - ignored
too few - missing values are ignored


arguments - special parameter - array like object with all the parameters

varargs in a sense

Object.prototype
Array.prototype
Function.prototype
Number.prototype
String.prototype

typeof returns 'object' for array, 'object' for null

do not use eval - most abused feature of the language

only correct with json, but only if you can trust the server!

could use parseJson method instead

javascript does have object representations of primitives, but no reason to use it!  don't use new Boolean etc in javascript!

`object` doesn't exist built in
function object(o) {
	function F() {}
	F.prototype = o;
	return new F();
}

formal classes are not needed in javascript


global variables are evil- minimize global namespace

implied globals are a big problem

jslint - can catch globals and other problems


# video 2

dates - based on java

regular expressions - bizarre syntax, delimited by slashes (which are also used in many other places)

action script (in flash) is somewhat similar to javascript but certainly not compatible

e4x - xml syntax features tacked on to js.  Only firefox supports it.  stay away - will cause syntax errors in non e4x browsers (and can't conditionally include it).

code conventions are necessary for javascript since the language itself doesn't enforce much rigor.

http://javascript.crockford.com/code.html

always use semicolons  - compiler will insert them automatically if you forget, but you REALLY shouldn't rely on this!

break lines after punctuators, do not break after name, string, number, paren, bracket, ++ or --

do not use trailing commas in arrays; diff browsers tell you the length is different

define all variables at beginning of function.

avoid fallthrough
avoid assignment in if statements

== and != do type conversion


JSLint.com

key ideas
load and go delivery (source code as text that's executed like that)
loose typing
objects as general containers
prototypal inheritance
lambda
linkage through global variables